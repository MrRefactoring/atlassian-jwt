/**
 * The file ./resources/jwt-signed-urls.json is generated by a corresponding test in Atlassian Connect:
 * com.atlassian.plugin.connect.test.plugin.JwtSigningInteroperabilityTest
 *
 * See the file for the most up-to-date reference.
 */
import * as fs from 'fs';
import Uri from 'jsuri';
import qs from 'qs';
import * as jwt from '../lib/jwt';
import * as assert from 'assert';
import { Request } from 'express';

const file = __dirname + '/resources/jwt-signed-urls.json';
const testData = JSON.parse(fs.readFileSync(file, 'utf8'));

testData.tests.forEach((test: any) => {
    describe(test.name, function () {
        const uri = new Uri(test.signedUrl);
        const queryString = qs.parse((uri as any).uriParts.query);
        const token = queryString.jwt;

        it('should decode', function (done) {
            // Throws error if not valid
            jwt.decode(token, testData.secret, false);
            done();
        });

        it('should match canonical url', function (done) {
            const req = createRequest();
            const actualCanonicalUrl = jwt.createCanonicalRequest(req, false, test.addonBaseUrl || '');
            assert.equal(actualCanonicalUrl, test.canonicalUrl);
            done();
        });

        it('should match qsh', function (done) {
            const req = createRequest();
            const actualQsh = jwt.createQueryStringHash(req, false, test.addonBaseUrl || '');
            const decodedToken = jwt.decode(token, testData.secret, true);
            assert.equal(actualQsh, decodedToken.qsh);
            done();
        });

        function createRequest(): jwt.Request {
            return jwt.fromExpressRequest({
                method: "GET",
                originalUrl: uri.path(),
                query: queryString
            } as Request);
        }
    });
});
